//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteFileInfo", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    public partial class RemoteFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream FileByteStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream FileByteStream {
            get {
                return this.FileByteStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileByteStreamField, value) != true)) {
                    this.FileByteStreamField = value;
                    this.RaisePropertyChanged("FileByteStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadRequest", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    public partial class DownloadRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    public partial class Data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string msgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LgName {
            get {
                return this.LgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LgNameField, value) != true)) {
                    this.LgNameField = value;
                    this.RaisePropertyChanged("LgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string msg {
            get {
                return this.msgField;
            }
            set {
                if ((object.ReferenceEquals(this.msgField, value) != true)) {
                    this.msgField = value;
                    this.RaisePropertyChanged("msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string str {
            get {
                return this.strField;
            }
            set {
                if ((object.ReferenceEquals(this.strField, value) != true)) {
                    this.strField = value;
                    this.RaisePropertyChanged("str");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vNo {
            get {
                return this.vNoField;
            }
            set {
                if ((object.ReferenceEquals(this.vNoField, value) != true)) {
                    this.vNoField = value;
                    this.RaisePropertyChanged("vNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vPass {
            get {
                return this.vPassField;
            }
            set {
                if ((object.ReferenceEquals(this.vPassField, value) != true)) {
                    this.vPassField = value;
                    this.RaisePropertyChanged("vPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        void UploadFile(Client.ServiceReference1.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(Client.ServiceReference1.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFile", ReplyAction="http://tempuri.org/IService/DownloadFileResponse")]
        Client.ServiceReference1.RemoteFileInfo DownloadFile(Client.ServiceReference1.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFile", ReplyAction="http://tempuri.org/IService/DownloadFileResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference1.RemoteFileInfo> DownloadFileAsync(Client.ServiceReference1.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/setMsg", ReplyAction="http://tempuri.org/IService/setMsgResponse")]
        string setMsg(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/setMsg", ReplyAction="http://tempuri.org/IService/setMsgResponse")]
        System.Threading.Tasks.Task<string> setMsgAsync(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoSql", ReplyAction="http://tempuri.org/IService/DoSqlResponse")]
        string DoSql(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DoSql", ReplyAction="http://tempuri.org/IService/DoSqlResponse")]
        System.Threading.Tasks.Task<string> DoSqlAsync(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginSystem", ReplyAction="http://tempuri.org/IService/LoginSystemResponse")]
        string LoginSystem(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginSystem", ReplyAction="http://tempuri.org/IService/LoginSystemResponse")]
        System.Threading.Tasks.Task<string> LoginSystemAsync(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadAPK", ReplyAction="http://tempuri.org/IService/LoadAPKResponse")]
        string LoadAPK(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoadAPK", ReplyAction="http://tempuri.org/IService/LoadAPKResponse")]
        System.Threading.Tasks.Task<string> LoadAPKAsync(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAPK", ReplyAction="http://tempuri.org/IService/UpdateAPKResponse")]
        string UpdateAPK(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateAPK", ReplyAction="http://tempuri.org/IService/UpdateAPKResponse")]
        System.Threading.Tasks.Task<string> UpdateAPKAsync(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RunProcedure", ReplyAction="http://tempuri.org/IService/RunProcedureResponse")]
        string RunProcedure(Client.ServiceReference1.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RunProcedure", ReplyAction="http://tempuri.org/IService/RunProcedureResponse")]
        System.Threading.Tasks.Task<string> RunProcedureAsync(Client.ServiceReference1.Data data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Client.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IService>, Client.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(Client.ServiceReference1.RemoteFileInfo request) {
            base.Channel.UploadFile(request);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(Client.ServiceReference1.RemoteFileInfo request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public Client.ServiceReference1.RemoteFileInfo DownloadFile(Client.ServiceReference1.DownloadRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference1.RemoteFileInfo> DownloadFileAsync(Client.ServiceReference1.DownloadRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public string setMsg(Client.ServiceReference1.Data data) {
            return base.Channel.setMsg(data);
        }
        
        public System.Threading.Tasks.Task<string> setMsgAsync(Client.ServiceReference1.Data data) {
            return base.Channel.setMsgAsync(data);
        }
        
        public string DoSql(Client.ServiceReference1.Data data) {
            return base.Channel.DoSql(data);
        }
        
        public System.Threading.Tasks.Task<string> DoSqlAsync(Client.ServiceReference1.Data data) {
            return base.Channel.DoSqlAsync(data);
        }
        
        public string LoginSystem(Client.ServiceReference1.Data data) {
            return base.Channel.LoginSystem(data);
        }
        
        public System.Threading.Tasks.Task<string> LoginSystemAsync(Client.ServiceReference1.Data data) {
            return base.Channel.LoginSystemAsync(data);
        }
        
        public string LoadAPK(Client.ServiceReference1.Data data) {
            return base.Channel.LoadAPK(data);
        }
        
        public System.Threading.Tasks.Task<string> LoadAPKAsync(Client.ServiceReference1.Data data) {
            return base.Channel.LoadAPKAsync(data);
        }
        
        public string UpdateAPK(Client.ServiceReference1.Data data) {
            return base.Channel.UpdateAPK(data);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAPKAsync(Client.ServiceReference1.Data data) {
            return base.Channel.UpdateAPKAsync(data);
        }
        
        public string RunProcedure(Client.ServiceReference1.Data data) {
            return base.Channel.RunProcedure(data);
        }
        
        public System.Threading.Tasks.Task<string> RunProcedureAsync(Client.ServiceReference1.Data data) {
            return base.Channel.RunProcedureAsync(data);
        }
    }
}
